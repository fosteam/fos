<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mapper文件用于Mybatis文件的dao操作 -->
<mapper namespace="com.dao.CommentDao">

    <select id="queryAllCommentCountByMovieId" resultType="java.lang.Integer">
        SELECT COUNT(comment_id) AS TOTAL FROM tb_movie_comment WHERE state=0 AND flag=0 AND movie_id=#{movieId};
    </select>


    <select id="queryAllCommentCountByUserId" resultType="java.lang.Integer">
        SELECT COUNT(comment_id) AS TOTAL FROM tb_movie_comment WHERE state=0 AND flag=0 AND user_id=#{userId};
    </select>

    <select id="queryAllCommentByMovieId" resultType="com.vo.VeiwMovieComment">
       SELECT
       c.comment_id,
       c.content,
       c.create_time,
       c.start,
       c.state,
       c.user_id,
       u.user_name,
       u.user_img
       FROM
       tb_movie_comment c,
       tb_user u
       WHERE
       c.state=0
       AND
       c.movie_id=#{movieId}
       AND
       c.user_id=u.user_id
       AND
       c.flag=0
       ORDER BY c.create_time DESC
    </select>


    <select id="queryAllCommentByUserId" resultType="com.vo.ViewUserComment">
       SELECT
       c.comment_id,
       c.content,
       c.create_time,
       c.start,
       c.state,
       c.user_id,
       c.movie_id,
       m.movie_name,
       m.movie_img,
       u.user_name,
       u.user_img
       FROM
       tb_movie_comment c,
       tb_movie m,
       tb_user u
       WHERE
       c.state=0
       AND
       c.user_id=#{userId}
       AND
       u.user_id=#{userId}
       AND
       c.movie_id=m.movie_id
        ORDER BY c.create_time DESC
    </select>


    <select id="selectComment" parameterType="com.entity.MovieComment" resultType="com.entity.MovieComment">
        SELECT
        comment_id
        FROM
        tb_movie_comment
        WHERE
        state=0
        AND
        movie_id = #{movie.movieId}
        AND
        user_id=#{user.userId}
    </select>


    <insert id="insertComment" useGeneratedKeys="true" keyProperty="commentId" keyColumn="comment_id">
      INSERT INTO
      tb_movie_comment(comment_id,movie_id,user_id,content,create_time,start,state)
      VALUES
      (#{commentId},#{movie.movieId},#{user.userId},#{content},#{createTime},#{start},#{state});
   </insert>



    <update id="updateComment" parameterType="com.entity.MovieComment">
        UPDATE tb_movie_comment
        <trim prefix="set" suffixOverrides=",">
            <if test="content!=null">content=#{content},</if>
            <if test="start!=null">start=#{start},</if>
            <if test="createTime!=null">create_time=#{createTime},</if>
        </trim>
        WHERE
        user_id=#{user.userId}
        AND
        movie_id = #{movie.movieId}
    </update>

    <update id="delectComment" parameterType="com.entity.MovieComment">
        UPDATE tb_movie_comment
        SET
        create_time=#{createTime},
        state=#{state}
        WHERE
        user_id=#{user.userId}
        AND
        comment_id = #{commentId}
    </update>


</mapper>

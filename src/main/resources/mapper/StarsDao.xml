<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.StarsDao">
    <select id="queryStarMovie" parameterType="Integer" resultType="com.vo.ViewStars">
        SELECT
        s.movie_id,
        m.movie_name,
        m.movie_img,
        s.create_time
        FROM
        tb_stars s,
        tb_movie m
        WHERE
        s.state=0
        AND
        m.movie_id=s.movie_id
        AND
        s.user_id=#{userId}
        ORDER BY create_time
        DESC
    </select>

    <select id="queryIsStar"  resultType="Integer">
      SELECT IFNULL((SELECT user_id FROM tb_stars WHERE state=0 AND user_id=#{userId} AND movie_id=#{movieId}),0);
    </select>

    <select id="queryIsHave" resultType="Integer">
        SELECT IFNULL((SELECT user_id FROM tb_stars WHERE user_id=#{userId} AND movie_id=#{movieId}),0);
    </select>

    <insert id="insertStar" parameterType="com.entity.Stars">
        INSERT INTO tb_stars(user_id, movie_id,create_time) VALUES (#{userId},#{movieId},#{createTime});
    </insert>

    <update id="deleteStar" parameterType="com.entity.Stars">
        UPDATE tb_stars SET state=1,create_time=#{createTime} WHERE user_id=#{userId} AND movie_id=#{movieId}
    </update>


    <update id="updateStar" parameterType="com.entity.Stars">
        UPDATE tb_stars SET state=0,create_time=#{createTime} WHERE user_id=#{userId} AND movie_id=#{movieId}
    </update>
</mapper>